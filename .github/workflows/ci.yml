# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]
  schedule:
    - cron: '1 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-22.04

    env:
      pythonsite: /usr/lib/python3.10/site-packages

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      #- name: Set pythonsite env variable
      #  run: echo "pythonsite=$(python3 -m site --user-site)" >> $GITHUB_ENV

      - run: mkdir public
      - run: ls ${{ github.workspace }}
      - run: sudo apt update -y -qqq
      - run: sudo apt install -y -qqq build-essential debhelper dh-python git asciidoc intltool libpython3-dev libssl-dev libsystemd-dev python3-dev pkg-config systemd xsltproc docbook-xsl wget cargo
      - run: wget https://source.ipfire.org/releases/libloc/libloc-0.9.18.tar.gz
      - run: echo "16c76689fa0ea8ece4fca6abcf942f236c48440387bee1d9331ea937ccd7b87d  libloc-0.9.18.tar.gz" | sha256sum -c
      - run: tar -xof libloc-0.9.18.tar.gz
      - working-directory: ./libloc-0.9.18
        run: ./autogen.sh
      - working-directory: ./libloc-0.9.18
        run: ./configure CFLAGS='-g -O0' --prefix=/usr --sysconfdir=/etc --libdir=/usr/lib --with-database-path=${{ github.workspace }}/database.db --disable-lua --disable-man-pages
      - working-directory: ./libloc-0.9.18
        run: make
      - working-directory: ./libloc-0.9.18
        run: sudo make install
      - run: git clone --depth 1 https://git.torproject.org/tor.git

      - run: ls ${{ env.pythonsite }}
      - run: PYTHONPATH=${{ env.pythonsite }} location --quiet update
      - run: PYTHONPATH=${{ env.pythonsite }} location dump ${{ github.workspace }}/public/geoip-dump.txt
      #- run: version=$(date --date="$(PYTHONPATH=/usr/lib/python3.10/site-packages location version)" '+%Y%m%dT%H%m%SZ')
      - name: Set version env variable
        run: echo "version=$(TZ='UTC' date --date="$(PYTHONPATH=${{ env.pythonsite }} location version)" '+%Y%m%dT%H%m%SZ')" >> $GITHUB_ENV
      - working-directory: ./tor/scripts/maint/geoip/geoip-db-tool
        run: cargo run --release -- -i ${{ github.workspace }}/public/geoip-dump.txt
      - run: mv ./tor/scripts/maint/geoip/geoip-db-tool/geoip{,6} ./public/
      - working-directory: ./tor/scripts/maint/geoip/geoip-db-tool
        run: cargo run --release -- -i ${{ github.workspace }}/public/geoip-dump.txt --include-asn --output-asn asn.txt
      - run: mv ./tor/scripts/maint/geoip/geoip-db-tool/asn.txt ./public/
      - run: mv ./tor/scripts/maint/geoip/geoip-db-tool/geoip ./public/geoip-plus-asn
      - run: mv ./tor/scripts/maint/geoip/geoip-db-tool/geoip6 ./public/geoip6-plus-asn
      - run: echo "${{ env.version }}" > ./version
      - run: cp ./version ./public/

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Action commit'
          add: 'version'

      - run: rm ./public/geoip-dump.txt
      - run: ls ./public

      - name: tar files
        run: tar -Jcvf geoip.tar.xz -C public .

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "${{ env.version }}"
          name: "${{ env.version }}"
          draft: false
          prerelease: false
          files: |
            geoip.tar.xz
