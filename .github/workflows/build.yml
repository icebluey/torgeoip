# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  #push:
  #  branches: [ "master" ]
  #pull_request:
  #  branches: [ "master" ]
  schedule:
    - cron: '0 0 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions: write-all

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-22.04

    #env:
    #  pythonsite: /usr/lib/python3.10/site-packages

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      #- name: Set pythonsite env variable
      #  run: echo "pythonsite=$(python3 -m site --user-site)" >> $GITHUB_ENV

      - name: starting time
        run: date -u -R
      - name: current dir
        run: pwd; /bin/ls -lah
      - run: mkdir public
      - name: ${{ github.workspace }}
        run: ls -lah ${{ github.workspace }}
      - run: sudo apt update -y -qqq
      - run: sudo apt autoremove --purge -y -qqq needrestart || true
      - run: sudo ln -svf ../usr/share/zoneinfo/UTC /etc/localtime; sudo DEBIAN_FRONTEND=noninteractive apt install -y tzdata; sudo dpkg-reconfigure --frontend noninteractive tzdata
      - run: sudo apt install -y -qqq build-essential debhelper dh-python git asciidoc intltool libpython3-dev libssl-dev libsystemd-dev python3-dev pkg-config systemd xsltproc docbook-xsl wget

      - name: Install latest stable rust version
        run: |
          /bin/rm -vfr "$HOME/.cargo" "$HOME/.rustup"
          curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs -o /tmp/install_rust_tmp.sh
          bash /tmp/install_rust_tmp.sh -y
          echo "PATH="$HOME/.cargo/bin:$PATH"" >> $GITHUB_ENV
          rm -f /tmp/install_rust_tmp.sh

      - run: wget https://source.ipfire.org/releases/libloc/libloc-0.9.18.tar.gz
      - run: echo "16c76689fa0ea8ece4fca6abcf942f236c48440387bee1d9331ea937ccd7b87d  libloc-0.9.18.tar.gz" | sha256sum -c
      - run: tar -xof libloc-0.9.18.tar.gz
      - working-directory: libloc-0.9.18
        run: ./autogen.sh
      - working-directory: libloc-0.9.18
        run: ./configure CFLAGS='-g -O0' --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu --includedir=/usr/include --sysconfdir=/etc --localstatedir=/var --with-python_prefix=/usr --with-python_exec_prefix=/usr --disable-lua --disable-man-pages
      - working-directory: libloc-0.9.18
        run: make -j$(nproc --all) all
      - working-directory: libloc-0.9.18
        run: sudo make install
      - run: echo '/usr/lib/python3.10/site-packages' | sudo tee /usr/lib/python3/dist-packages/site-packages.pth
      #- run: ls ${{ env.pythonsite }}
      #- run: PYTHONPATH=${{ env.pythonsite }} location --quiet update
      - run: sudo rm -f /var/lib/location/database.db
      - run: sudo location --quiet update
      - run: location dump ${{ github.workspace }}/public/geoip-dump.txt
      #- run: version=$(date -u --date="$(PYTHONPATH=/usr/lib/python3.10/site-packages location version)" '+%Y%m%dT%H%M%SZ')
      - name: Set version env variable
        run: echo "version=$(date -u --date="$(location version)" '+%Y%m%dT%H%M%SZ')" >> $GITHUB_ENV

      - run: git clone --depth 1 https://git.torproject.org/tor.git
      - working-directory: tor/scripts/maint/geoip/geoip-db-tool
        run: |
          cargo --version
          cargo run --release -- -i ${{ github.workspace }}/public/geoip-dump.txt
      - run: mv -f tor/scripts/maint/geoip/geoip-db-tool/geoip{,6} public/
      - working-directory: tor/scripts/maint/geoip/geoip-db-tool
        run: cargo run --release -- -i ${{ github.workspace }}/public/geoip-dump.txt --include-asn --output-asn asn.txt
      - run: mv -f tor/scripts/maint/geoip/geoip-db-tool/asn.txt public/
      - run: mv -f tor/scripts/maint/geoip/geoip-db-tool/geoip public/geoip-plus-asn
      - run: mv -f tor/scripts/maint/geoip/geoip-db-tool/geoip6 public/geoip6-plus-asn
      - run: echo "${{ env.version }}" > public/version

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Action commit'
          add: 'version'

      - run: sudo rm -f public/geoip-dump.txt
      - run: sudo chown root:root public/*
      - run: sudo chmod 0644 public/*
      - run: ls -la public

      - name: tar files
        run: |
          cd public
          tar --format=gnu -cvf - * | xz -T$(nproc) -f -z -9 > ../geoip.tar.xz

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "${{ env.version }}"
          name: "${{ env.version }}"
          draft: false
          prerelease: false
          files: |
            geoip.tar.xz
